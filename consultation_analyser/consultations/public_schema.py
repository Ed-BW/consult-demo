# generated by datamodel-codegen:
#   filename:  public_schema.yaml
#   timestamp: 2025-04-08T11:47:55+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, Optional

from pydantic import BaseModel, Field, RootModel


class Consultation(BaseModel):
    title: str = Field(..., max_length=256)


class Question(BaseModel):
    text: str
    consultation: Consultation
    number: int


class Type(Enum):
    free_text = "free_text"
    single_option = "single_option"
    multiple_options = "multiple_options"


class QuestionPart(BaseModel):
    question: Question
    text: str
    type: Type
    options: Optional[Dict[str, Any]] = Field(None, description="JSON data")
    number: int


class Type1(Enum):
    sentiment_analysis = "sentiment_analysis"
    theme_generation = "theme_generation"
    theme_mapping = "theme_mapping"


class ExecutionRun(BaseModel):
    type: Type1


class Stance(Enum):
    POSITIVE = "POSITIVE"
    NEGATIVE = "NEGATIVE"


class Position(Enum):
    AGREEMENT = "AGREEMENT"
    DISAGREEMENT = "DISAGREEMENT"
    UNCLEAR = "UNCLEAR"


class Respondent(BaseModel):
    id: Any


class User(RootModel[Any]):
    root: Any


class Answer(BaseModel):
    question_part: QuestionPart
    respondent: Respondent
    text: str
    chosen_options: Dict[str, Any] = Field(..., description="JSON object data")


class Framework(BaseModel):
    execution_run: Optional[ExecutionRun] = None
    question_part: QuestionPart
    change_reason: str = Field(..., max_length=256)
    user: Optional[User] = None
    precursor: Optional[Framework] = None


class Theme(BaseModel):
    framework: Framework
    precursor: Optional[Theme] = None
    name: str = Field(..., max_length=256)
    description: str
    key: Optional[str] = Field(None, max_length=128)


class ThemeMapping(BaseModel):
    answer: Answer
    theme: Theme
    reason: str
    execution_run: Optional[ExecutionRun] = None
    stance: Stance
    user_audited: bool


class SentimentMapping(BaseModel):
    answer: Answer
    execution_run: ExecutionRun
    position: Position


Framework.model_rebuild()
Theme.model_rebuild()
