openapi: 3.0.3
info:
  title: Consult
  version: 1.0.0
  description: OpenAPI schema for the models in the Consultations app
paths: {}
components:
  schemas:
    Consultation:
      type: object
      properties:
        title:
          type: string
          maxLength: 256
      required:
      - title
    Question:
      type: object
      properties:
        text:
          type: string
        consultation:
          type: uuid
          $ref: '#/components/schemas/Consultation'
        number:
          type: integer
      required:
      - text
      - consultation
      - number
    QuestionPart:
      type: object
      properties:
        question:
          type: uuid
          $ref: '#/components/schemas/Question'
        text:
          type: string
        type:
          type: string
          maxLength: 16
          enum:
          - free_text
          - single_option
          - multiple_options
        options:
          type: object
          additionalProperties: true
          description: JSON data
        number:
          type: integer
      required:
      - question
      - text
      - type
      - number
    Answer:
      type: object
      properties:
        question_part:
          type: uuid
          $ref: '#/components/schemas/QuestionPart'
        respondent:
          type: uuid
          $ref: '#/components/schemas/Respondent'
        text:
          type: string
        chosen_options:
          type: object
          additionalProperties: true
          description: JSON object data
      required:
      - question_part
      - respondent
      - text
      - chosen_options
    ExecutionRun:
      type: object
      properties:
        type:
          type: string
          maxLength: 32
          enum:
          - sentiment_analysis
          - theme_generation
          - theme_mapping
      required:
      - type
    Framework:
      type: object
      properties:
        execution_run:
          type: uuid
          $ref: '#/components/schemas/ExecutionRun'
        question_part:
          type: uuid
          $ref: '#/components/schemas/QuestionPart'
        change_reason:
          type: string
          maxLength: 256
        user:
          type: uuid
          $ref: '#/components/schemas/User'
        precursor:
          type: uuid
          $ref: '#/components/schemas/Framework'
      required:
      - question_part
      - change_reason
    Theme:
      type: object
      properties:
        framework:
          type: uuid
          $ref: '#/components/schemas/Framework'
        precursor:
          type: uuid
          $ref: '#/components/schemas/Theme'
        name:
          type: string
          maxLength: 256
        description:
          type: string
        key:
          type: string
          maxLength: 128
      required:
      - framework
      - name
      - description
    ThemeMapping:
      type: object
      properties:
        answer:
          type: uuid
          $ref: '#/components/schemas/Answer'
        theme:
          type: uuid
          $ref: '#/components/schemas/Theme'
        reason:
          type: string
        execution_run:
          type: uuid
          $ref: '#/components/schemas/ExecutionRun'
        stance:
          type: string
          maxLength: 8
          enum:
          - POSITIVE
          - NEGATIVE
        user_audited:
          type: boolean
      required:
      - answer
      - theme
      - reason
      - stance
      - user_audited
    SentimentMapping:
      type: object
      properties:
        answer:
          type: uuid
          $ref: '#/components/schemas/Answer'
        execution_run:
          type: uuid
          $ref: '#/components/schemas/ExecutionRun'
        position:
          type: string
          maxLength: 12
          enum:
          - AGREEMENT
          - DISAGREEMENT
          - UNCLEAR
      required:
      - answer
      - execution_run
      - position
    Respondent:
      type: object
      properties:
        id:
          type: any
      required:
      - id
