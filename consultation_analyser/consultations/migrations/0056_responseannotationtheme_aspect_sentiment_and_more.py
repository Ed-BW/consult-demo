# Generated by Django 5.2.3 on 2025-06-22 13:14

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("consultations", "0055_remove_thememapping_answer_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="responseannotationtheme",
            name="aspect_sentiment",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name="PersonaCluster",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=256)),
                ("tagline", models.CharField(max_length=512)),
                ("description", models.TextField()),
                ("size", models.IntegerField()),
                ("demographic_profile", models.JSONField(default=dict)),
                ("cluster_center", models.JSONField(default=dict)),
                ("quality_metrics", models.JSONField(default=dict)),
                (
                    "generation_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "consultation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.consultation",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PersonaTheme",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("sentiment_score", models.FloatField()),
                ("prevalence", models.FloatField()),
                ("sample_quotes", models.JSONField(default=list)),
                ("lift", models.FloatField(blank=True, null=True)),
                ("confidence", models.FloatField(blank=True, null=True)),
                (
                    "persona",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.personacluster",
                    ),
                ),
                (
                    "theme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.theme",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RespondentPersona",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                ("confidence_score", models.FloatField()),
                ("feature_vector", models.JSONField(default=dict)),
                ("distance_to_center", models.FloatField(blank=True, null=True)),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assignment_method",
                    models.CharField(
                        choices=[
                            ("KMEANS", "K-Means"),
                            ("HDBSCAN", "HDBSCAN"),
                            ("MANUAL", "Manual Assignment"),
                        ],
                        default="KMEANS",
                        max_length=20,
                    ),
                ),
                (
                    "persona_cluster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.personacluster",
                    ),
                ),
                (
                    "respondent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="consultations.respondent",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
                "abstract": False,
            },
        ),
        migrations.AddIndex(
            model_name="personacluster",
            index=models.Index(
                fields=["consultation", "generation_status"],
                name="consultatio_consult_1b8a05_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="personacluster",
            index=models.Index(
                fields=["last_updated"], name="consultatio_last_up_7a0dd0_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="personacluster",
            constraint=models.UniqueConstraint(
                fields=("consultation", "name"),
                name="unique_persona_name_per_consultation",
            ),
        ),
        migrations.AddIndex(
            model_name="personatheme",
            index=models.Index(
                fields=["persona", "-prevalence"], name="consultatio_persona_43b43a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="personatheme",
            index=models.Index(
                fields=["theme", "-lift"], name="consultatio_theme_i_8ff33c_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="personatheme",
            constraint=models.UniqueConstraint(
                fields=("persona", "theme"), name="unique_persona_theme"
            ),
        ),
        migrations.AddIndex(
            model_name="respondentpersona",
            index=models.Index(
                fields=["persona_cluster", "-confidence_score"],
                name="consultatio_persona_4eee6e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="respondentpersona",
            index=models.Index(
                fields=["respondent"], name="consultatio_respond_2751c8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="respondentpersona",
            index=models.Index(
                fields=["assigned_at"], name="consultatio_assigne_2c769c_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="respondentpersona",
            constraint=models.UniqueConstraint(
                fields=("respondent", "persona_cluster"),
                name="unique_respondent_persona_assignment",
            ),
        ),
    ]
